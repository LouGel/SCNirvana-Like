/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { BuyBack, BuyBackInterface } from "../../contracts/BuyBack";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_dayOfWithdraw",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "interval",
        type: "uint256",
      },
      {
        internalType: "contract IERC20BurnableMinter",
        name: "_lab",
        type: "address",
      },
      {
        internalType: "contract IERC20BurnableMinter",
        name: "_usdc",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnRest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "dayOfBuyBack",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dayOfWithdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "ratiox100",
        type: "uint256",
      },
    ],
    name: "getStables",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isOpenned",
    outputs: [
      {
        internalType: "bool",
        name: "isIt",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "market",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_salt",
        type: "string",
      },
    ],
    name: "mixTime",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountToSell",
        type: "uint256",
      },
    ],
    name: "selllab",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_market",
        type: "address",
      },
    ],
    name: "setMarket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60e060405234801561001057600080fd5b50604051610f4a380380610f4a83398101604081905261002f916100d4565b61003833610068565b60018055608084905261004b838561011a565b6002556001600160a01b0391821660c0521660a052506101409050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146100cf57600080fd5b919050565b600080600080608085870312156100ea57600080fd5b8451935060208501519250610101604086016100b8565b915061010f606086016100b8565b905092959194509250565b6000821982111561013b57634e487b7160e01b600052601160045260246000fd5b500190565b60805160a05160c051610daa6101a0600039600081816102a20152818161037b015281816106fe015261082601526000818161022601528181610414015281816105e0015261067601526000818161014e01526105120152610daa6000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80638da5cb5b116100715780638da5cb5b146101385780639f71354814610149578063bfd49f2814610170578063ed5ca0cb14610183578063f2fde38b14610196578063ff0252bb146101a957600080fd5b80630fa34756146100b9578063276fdd70146100ce5780636dcea85f146100ea57806371300ea3146100fd578063715018a61461011057806380f5560514610118575b600080fd5b6100cc6100c7366004610b87565b6101c1565b005b6100d760025481565b6040519081526020015b60405180910390f35b6100cc6100f8366004610ba0565b61049b565b6100cc61010b366004610b87565b6104c5565b6100cc610791565b60045461012b906001600160a01b031681565b6040516100e19190610bd0565b6000546001600160a01b031661012b565b6100d77f000000000000000000000000000000000000000000000000000000000000000081565b6100cc61017e366004610b87565b6107a5565b6100cc610191366004610be4565b61091b565b6100cc6101a4366004610ba0565b6109cb565b6101b1610a41565b60405190151581526020016100e1565b6101c9610a60565b6101d1610a41565b61020c5760405162461bcd60e51b81526020600482015260076024820152664e6f74204e6f7760c81b60448201526064015b60405180910390fd5b6040516370a0823160e01b81526000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a082319061025b903090600401610bd0565b602060405180830381865afa158015610278573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061029c9190610c56565b905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166370a08231306040518263ffffffff1660e01b81526004016102ec9190610bd0565b602060405180830381865afa158015610309573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032d9190610c56565b9050600061033b8284610c85565b905060006103498584610ca4565b905060006103578284610cd2565b6103619086610ce6565b6040516323b872dd60e01b81529091506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906323b872dd906103b490339030908b90600401610cfd565b6020604051808303816000875af11580156103d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f79190610d21565b5060405163a9059cbb60e01b8152336004820152602481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb906044016020604051808303816000875af1158015610465573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104899190610d21565b50505050505061049860018055565b50565b6104a3610aba565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6104cd610aba565b6064811061050f5760405162461bcd60e51b815260206004820152600f60248201526e546f6f2064616d6e20626f72696e6760881b6044820152606401610203565b427f0000000000000000000000000000000000000000000000000000000000000000106105685760405162461bcd60e51b81526020600482015260076024820152664e6f74206e6f7760c81b6044820152606401610203565b6004805460408051638456cb5960e01b815290516001600160a01b0390921692638456cb5992828201926000929082900301818387803b1580156105ab57600080fd5b505af11580156105bf573d6000803e3d6000fd5b5050600480546040516370a0823160e01b8152600094506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811694506370a0823193610617939091169101610bd0565b602060405180830381865afa158015610634573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106589190610c56565b600480546040516323b872dd60e01b81529293506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116936323b872dd936106b093909216913091879101610cfd565b6020604051808303816000875af11580156106cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f39190610d21565b506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663318c459a83610733846402540be400610c85565b61073d9190610c85565b6040518263ffffffff1660e01b815260040161075b91815260200190565b600060405180830381600087803b15801561077557600080fd5b505af1158015610789573d6000803e3d6000fd5b505050505050565b610799610aba565b6107a36000610b14565b565b6107ad610aba565b600254620151809042906107c2908390610ca4565b1061080f5760405162461bcd60e51b815260206004820152601c60248201527f204c65742070656f706c652074616b6520746865206275796261636b000000006044820152606401610203565b6040516370a0823160e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906342966c6890849083906370a0823190610865903090600401610bd0565b602060405180830381865afa158015610882573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a69190610c56565b6108b09190610ce6565b6040518263ffffffff1660e01b81526004016108ce91815260200190565b600060405180830381600087803b1580156108e857600080fd5b505af11580156108fc573d6000803e3d6000fd5b5050505080600260008282546109129190610ca4565b90915550505050565b60025442106109575760405162461bcd60e51b8152602060048201526008602482015267546f6f204c61746560c01b6044820152606401610203565b6109c46003548383604051602001610970929190610d43565b604051602081830303815290604052805190602001204460405160200161099991815260200190565b6040516020818303038152906040528051906020012060009283526020919091526040526060902090565b6003555050565b6109d3610aba565b6001600160a01b038116610a385760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610203565b61049881610b14565b6000610a4b610b64565b600254610a589190610ca4565b421015905090565b60026001541415610ab35760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610203565b6002600155565b6000546001600160a01b031633146107a35760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610203565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008060096010600354901b60f01c610b7d9190610d53565b61ffff1692915050565b600060208284031215610b9957600080fd5b5035919050565b600060208284031215610bb257600080fd5b81356001600160a01b0381168114610bc957600080fd5b9392505050565b6001600160a01b0391909116815260200190565b60008060208385031215610bf757600080fd5b823567ffffffffffffffff80821115610c0f57600080fd5b818501915085601f830112610c2357600080fd5b813581811115610c3257600080fd5b866020828501011115610c4457600080fd5b60209290920196919550909350505050565b600060208284031215610c6857600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615610c9f57610c9f610c6f565b500290565b60008219821115610cb757610cb7610c6f565b500190565b634e487b7160e01b600052601260045260246000fd5b600082610ce157610ce1610cbc565b500490565b600082821015610cf857610cf8610c6f565b500390565b6001600160a01b039384168152919092166020820152604081019190915260600190565b600060208284031215610d3357600080fd5b81518015158114610bc957600080fd5b8183823760009101908152919050565b600061ffff80841680610d6857610d68610cbc565b9216919091049291505056fea2646970667358221220ee7881bf457e8726e5419f821f2a0fa89e12d88977ed4807781949731eeafe7e64736f6c634300080c0033";

type BuyBackConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BuyBackConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BuyBack__factory extends ContractFactory {
  constructor(...args: BuyBackConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _dayOfWithdraw: PromiseOrValue<BigNumberish>,
    interval: PromiseOrValue<BigNumberish>,
    _lab: PromiseOrValue<string>,
    _usdc: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BuyBack> {
    return super.deploy(
      _dayOfWithdraw,
      interval,
      _lab,
      _usdc,
      overrides || {}
    ) as Promise<BuyBack>;
  }
  override getDeployTransaction(
    _dayOfWithdraw: PromiseOrValue<BigNumberish>,
    interval: PromiseOrValue<BigNumberish>,
    _lab: PromiseOrValue<string>,
    _usdc: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _dayOfWithdraw,
      interval,
      _lab,
      _usdc,
      overrides || {}
    );
  }
  override attach(address: string): BuyBack {
    return super.attach(address) as BuyBack;
  }
  override connect(signer: Signer): BuyBack__factory {
    return super.connect(signer) as BuyBack__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BuyBackInterface {
    return new utils.Interface(_abi) as BuyBackInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BuyBack {
    return new Contract(address, _abi, signerOrProvider) as BuyBack;
  }
}
