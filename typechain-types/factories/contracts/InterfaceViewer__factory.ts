/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  InterfaceViewer,
  InterfaceViewerInterface,
} from "../../contracts/InterfaceViewer";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IMarket",
        name: "_market",
        type: "address",
      },
      {
        internalType: "contract IStakePool",
        name: "_stakePool",
        type: "address",
      },
      {
        internalType: "contract IBank",
        name: "_bank",
        type: "address",
      },
      {
        internalType: "contract IGLA",
        name: "_gla",
        type: "address",
      },
      {
        internalType: "contract IBuyBack",
        name: "_buyback",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_lab",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_prLab",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_dsd",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_usdc",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "bank",
    outputs: [
      {
        internalType: "contract IBank",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "buyback",
    outputs: [
      {
        internalType: "contract IBuyBack",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dsd",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "getBorrowInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "borrowedDsd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrowedLimit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrowable",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "getSideBar",
    outputs: [
      {
        internalType: "uint256",
        name: "stakedLabs",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "prLabBal",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "dsdBal",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "usdcBal",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "labBal",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "withdrawable",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "getStakeAndEarn",
    outputs: [
      {
        internalType: "uint256",
        name: "mintpercentperday",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalLabStaked",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tvLocked",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "availableReward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalRatio",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "yield",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOfLabStaked",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getStep",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTrade",
    outputs: [
      {
        internalType: "uint256",
        name: "c",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "f",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tsLab",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalWorth",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "mintPercentPerday",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "balancoeOfProtocol",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalVolume",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gla",
    outputs: [
      {
        internalType: "contract IGLA",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lab",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "market",
    outputs: [
      {
        internalType: "contract IMarket",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "prLab",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stakePool",
    outputs: [
      {
        internalType: "contract IStakePool",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "usdc",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "";

type InterfaceViewerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: InterfaceViewerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class InterfaceViewer__factory extends ContractFactory {
  constructor(...args: InterfaceViewerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _market: PromiseOrValue<string>,
    _stakePool: PromiseOrValue<string>,
    _bank: PromiseOrValue<string>,
    _gla: PromiseOrValue<string>,
    _buyback: PromiseOrValue<string>,
    _lab: PromiseOrValue<string>,
    _prLab: PromiseOrValue<string>,
    _dsd: PromiseOrValue<string>,
    _usdc: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<InterfaceViewer> {
    return super.deploy(
      _market,
      _stakePool,
      _bank,
      _gla,
      _buyback,
      _lab,
      _prLab,
      _dsd,
      _usdc,
      overrides || {}
    ) as Promise<InterfaceViewer>;
  }
  override getDeployTransaction(
    _market: PromiseOrValue<string>,
    _stakePool: PromiseOrValue<string>,
    _bank: PromiseOrValue<string>,
    _gla: PromiseOrValue<string>,
    _buyback: PromiseOrValue<string>,
    _lab: PromiseOrValue<string>,
    _prLab: PromiseOrValue<string>,
    _dsd: PromiseOrValue<string>,
    _usdc: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _market,
      _stakePool,
      _bank,
      _gla,
      _buyback,
      _lab,
      _prLab,
      _dsd,
      _usdc,
      overrides || {}
    );
  }
  override attach(address: string): InterfaceViewer {
    return super.attach(address) as InterfaceViewer;
  }
  override connect(signer: Signer): InterfaceViewer__factory {
    return super.connect(signer) as InterfaceViewer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): InterfaceViewerInterface {
    return new utils.Interface(_abi) as InterfaceViewerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): InterfaceViewer {
    return new Contract(address, _abi, signerOrProvider) as InterfaceViewer;
  }
}
