/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { Labs, LabsInterface } from "../../../contracts/Lab.sol/Labs";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mintForBuyBack",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_buyback",
        type: "address",
      },
    ],
    name: "setBuyBack",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526006805460ff60a01b191690553480156200001e57600080fd5b50604051806040016040528060048152602001634c61627360e01b815250604051806040016040528060048152602001634c41425360e01b815250620000736200006d620000a760201b60201c565b620000ab565b815162000088906004906020850190620000fb565b5080516200009e906005906020840190620000fb565b505050620001de565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8280546200010990620001a1565b90600052602060002090601f0160209004810192826200012d576000855562000178565b82601f106200014857805160ff191683800117855562000178565b8280016001018555821562000178579182015b82811115620001785782518255916020019190600101906200015b565b50620001869291506200018a565b5090565b5b808211156200018657600081556001016200018b565b600181811c90821680620001b657607f821691505b60208210811415620001d857634e487b7160e01b600052602260045260246000fd5b50919050565b610d9380620001ee6000396000f3fe608060405234801561001057600080fd5b50600436106101115760003560e01c80636766c128116100ad57806395d89b411161007157806395d89b411461024b578063a457c2d714610253578063a9059cbb14610266578063dd62ed3e14610279578063f2fde38b1461028c57600080fd5b80636766c128146101d957806370a08231146101ec578063715018a61461021557806379cc67901461021d5780638da5cb5b1461023057600080fd5b806306fdde0314610116578063095ea7b31461013457806318160ddd1461015757806323b872dd14610169578063313ce5671461017c578063318c459a1461018b57806339509351146101a057806340c10f19146101b357806342966c68146101c6575b600080fd5b61011e61029f565b60405161012b9190610b97565b60405180910390f35b610147610142366004610c08565b610331565b604051901515815260200161012b565b6003545b60405190815260200161012b565b610147610177366004610c32565b610349565b6040516012815260200161012b565b61019e610199366004610c6e565b61036d565b005b6101476101ae366004610c08565b6103c7565b61019e6101c1366004610c08565b6103e9565b61019e6101d4366004610c6e565b6103ff565b61019e6101e7366004610c87565b610411565b61015b6101fa366004610c87565b6001600160a01b031660009081526001602052604090205490565b61019e610482565b61019e61022b366004610c08565b610496565b6000546040516001600160a01b03909116815260200161012b565b61011e6104b3565b610147610261366004610c08565b6104c2565b610147610274366004610c08565b61053d565b61015b610287366004610ca9565b61054b565b61019e61029a366004610c87565b610576565b6060600480546102ae90610cdc565b80601f01602080910402602001604051908101604052809291908181526020018280546102da90610cdc565b80156103275780601f106102fc57610100808354040283529160200191610327565b820191906000526020600020905b81548152906001019060200180831161030a57829003601f168201915b5050505050905090565b60003361033f8185856105ec565b5060019392505050565b600033610357858285610711565b61036285858561078b565b506001949350505050565b6006546001600160a01b031633146103ba5760405162461bcd60e51b815260206004820152600b60248201526a4a7573744275796261636b60a81b60448201526064015b60405180910390fd5b6103c43382610924565b50565b60003361033f8185856103da838361054b565b6103e49190610d17565b6105ec565b6103f16109d3565b6103fb8282610924565b5050565b6104076109d3565b6103c43382610a2d565b6104196109d3565b600654600160a01b900460ff16156104605760405162461bcd60e51b815260206004820152600a602482015269105b1c9958591e54d95d60b21b60448201526064016103b1565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b61048a6109d3565b6104946000610b47565b565b61049e6109d3565b6104a9823383610711565b6103fb8282610a2d565b6060600580546102ae90610cdc565b600033816104d0828661054b565b9050838110156105305760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016103b1565b61036282868684036105ec565b60003361033f81858561078b565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b61057e6109d3565b6001600160a01b0381166105e35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103b1565b6103c481610b47565b6001600160a01b03831661064e5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103b1565b6001600160a01b0382166106af5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103b1565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b600061071d848461054b565b9050600019811461078557818110156107785760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103b1565b61078584848484036105ec565b50505050565b6001600160a01b0383166107ef5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103b1565b6001600160a01b0382166108515760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103b1565b6001600160a01b038316600090815260016020526040902054818110156108c95760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103b1565b6001600160a01b038085166000818152600160205260408082208686039055928616808252908390208054860190559151600080516020610d3e833981519152906109179086815260200190565b60405180910390a3610785565b6001600160a01b03821661097a5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103b1565b806003600082825461098c9190610d17565b90915550506001600160a01b038216600081815260016020908152604080832080548601905551848152600080516020610d3e833981519152910160405180910390a35050565b6000546001600160a01b031633146104945760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103b1565b6001600160a01b038216610a8d5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016103b1565b6001600160a01b03821660009081526001602052604090205481811015610b015760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016103b1565b6001600160a01b0383166000818152600160209081526040808320868603905560038054879003905551858152919291600080516020610d3e8339815191529101610704565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208083528351808285015260005b81811015610bc457858101830151858201604001528201610ba8565b81811115610bd6576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610c0357600080fd5b919050565b60008060408385031215610c1b57600080fd5b610c2483610bec565b946020939093013593505050565b600080600060608486031215610c4757600080fd5b610c5084610bec565b9250610c5e60208501610bec565b9150604084013590509250925092565b600060208284031215610c8057600080fd5b5035919050565b600060208284031215610c9957600080fd5b610ca282610bec565b9392505050565b60008060408385031215610cbc57600080fd5b610cc583610bec565b9150610cd360208401610bec565b90509250929050565b600181811c90821680610cf057607f821691505b60208210811415610d1157634e487b7160e01b600052602260045260246000fd5b50919050565b60008219821115610d3857634e487b7160e01b600052601160045260246000fd5b50019056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220573a894a683abb4fd5d876363fc1126284be3a6dde81762497c3730f692c7dc364736f6c634300080c0033";

type LabsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LabsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Labs__factory extends ContractFactory {
  constructor(...args: LabsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Labs> {
    return super.deploy(overrides || {}) as Promise<Labs>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Labs {
    return super.attach(address) as Labs;
  }
  override connect(signer: Signer): Labs__factory {
    return super.connect(signer) as Labs__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LabsInterface {
    return new utils.Interface(_abi) as LabsInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Labs {
    return new Contract(address, _abi, signerOrProvider) as Labs;
  }
}
