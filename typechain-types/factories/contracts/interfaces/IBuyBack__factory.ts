/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IBuyBack,
  IBuyBackInterface,
} from "../../../contracts/interfaces/IBuyBack";

const _abi = [
  {
    inputs: [],
    name: "dayOfBuyBack",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isOpenned",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "mixTime",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "sellLab",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    name: "setStable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IBuyBack__factory {
  static readonly abi = _abi;
  static createInterface(): IBuyBackInterface {
    return new utils.Interface(_abi) as IBuyBackInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IBuyBack {
    return new Contract(address, _abi, signerOrProvider) as IBuyBack;
  }
}
